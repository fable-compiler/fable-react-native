/// Contains functions for push notifications.
namespace Fable.ReactNativePushNotification

open Fable.Core
open Fable.Import
open Fable.Core.JsInterop


/// Contains properties for push notifications.
module Props =
    type IPushNotificationOptions =
        interface end

    type PushNotificationOptions =
    | OnRegister of (obj -> unit)
    | SenderID of string
    | PopInitialNotification of bool
    | RequestPermissions of bool
    | OnNotification of (obj -> unit)
        interface IPushNotificationOptions


    type ILocalPushNotificationProperties =
        interface end

    type LocalPushNotificationProperties =
    // Android
    /// Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
    | Id of string
    | Ticker of string
    | AutoCancel of bool
    | LargeIcon of string
    | SmallIcon of string
    | BigText of string
    | SubText of string
    | Color of string
    | Vibrate of bool
    /// Vibration length in milliseconds, ignored if Vibrate = false. Default: 1000ms
    | Vibration of float
    | Tag of string
    | Group of string
    | OnGoing of bool
    // Android and iOS
    /// The title of the message. For iOS this is only used in apple watch, the title will be the app name on other iOS devices.
    | Title of string
    | PlaySound of bool
    | SoundName of string
    | Number of string
    /// Repeating interval. Could be one of `week`, `day`, `hour`, `minute, `time`.
    | RepeatType of string
    | Actions of string
        interface ILocalPushNotificationProperties


open Props

[<AutoOpen>]
module Helpers =

    /// Configures the push notification system.
    let inline configure (props: IPushNotificationOptions list) =
        Globals.PushNotification?configure(keyValueList CaseRules.LowerFirst props) |> ignore


    /// Set the application badge icon number.
    /// Works natively in iOS and uses the ShortcutBadger on Android, and as such will not work on all Android devices.
    let inline setApplicationIconBadgeNumber (number:int) =
        Globals.PushNotification?setApplicationIconBadgeNumber(number) |> ignore

    /// Sends a local push notification.
    let inline localNotification (props: ILocalPushNotificationProperties list) (message: string) =
        Globals.PushNotification?localNotification(
            JS.Object.assign(
                createObj ["message" ==> message],
                keyValueList CaseRules.LowerFirst props))
        |> ignore

    /// Schedules a local push notification.
    let inline localNotificationSchedule (props: ILocalPushNotificationProperties list) (date:System.DateTime) (message: string) =
        Globals.PushNotification?localNotificationSchedule(
            JS.Object.assign(
                createObj  ["message" ==> message
                            "date" ==> date],
                keyValueList CaseRules.LowerFirst props))
        |> ignore

    /// Cancels a local Push Notification.
    /// The the details parameter allows you to specify a userInfo dictionary that can be used to match one or more scheduled notifications.
    /// Each matched notification is cancelled and its alerts removed from the notification centre.
    ///
    /// Sample: PushNotification.cancelLocalNotifications [LocalPushNotificationProperties.Id "123"]
    let inline cancelLocalNotifications (details: ILocalPushNotificationProperties list) =
        Globals.PushNotification?cancelLocalNotifications(keyValueList CaseRules.LowerFirst details) |> ignore

    /// Cancels all scheduled notifications and clears the notifications alerts that are in the notification centre.
    let inline cancelAllLocalNotifications () =
        Globals.PushNotification?cancelAllLocalNotifications() |> ignore